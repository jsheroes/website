---
import { Icon } from "astro-icon";
export interface Props {
  theme?: "dark";
}

const { theme = "" } = Astro.props as Props;
const navlinkClass = `navlink ${theme}`;
---

<header class="m-auto relative max-w-[1280px]">
  <nav class="main-nav absolute right-0 p-4 flex gap-4 font-display z-10">
    <div class="hidden sm:flex gap-4">
      <a class={`${navlinkClass} h-0 w-0 overflow-hidden focus:h-auto focus:w-auto`} href="#main">Skip navigation</a>
      <a class={navlinkClass} href="/">Home</a>
      <a class={navlinkClass} href="/#speakers">Speakers</a>
      <a class={navlinkClass} href="/#sponsors">Sponsors</a>
    </div>

    <button class="hamburger w-[1.2rem] transition-transform duration-move ease-out hover:scale-[1.3] focus-visible:outline-accent-pink" aria-label="Toggle menu">
      <Icon name="mdi:menu" class={navlinkClass} />
    </button>
  </nav>
</header>

<nav class="side-drawer flex flex-col h-full bg-primary fixed top-0 right-0 w-full max-w-[400px] z-30 translate-x-full transition-all duration-slide ease-out font-display" tabindex="-1">
  <button class="close group self-end p-2 focus-visible:outline-accent-pink" aria-label="Close menu">
    <Icon name="mdi:close" class="navlink w-[1.2rem] transition-transform duration-fade ease-out group-hover:scale-[1.3]" />
  </button>
  <div class="flex flex-col gap-8 w-full mt-12">
    <div class="flex flex-col items-start gap-2 px-16">
      <a class="navlink" href="/">Home</a>
      <a class="navlink" href="/#speakers">Speakers</a>
      <a class="navlink" href="/#sponsors">Sponsors</a>
    </div>

    <div class="flex flex-col items-start gap-2 px-16">
      <a class="navlink" href="/blog">Blog</a>
      <a class="navlink" href="/transparency">Transparency</a>
      <a class="navlink" href="/coc">Code of Conduct</a>
      <a class="navlink" href="/privacy">Privacy Statement</a>
      <a class="navlink" href="/terms-and-conditions">Terms and Conditions</a>
      <a class="navlink" href="/media">Media Kit</a>
      <a class="navlink" href="/meet-ecma">Meet Ecma</a>
    </div>

    <div class="flex flex-col items-start gap-2 px-16">
      <a class="navlink" target="_blank" rel="noreferrer noopener" href="https://2023.jsheroes.io">2023</a>
      <a class="navlink" target="_blank" rel="noreferrer noopener" href="https://2022.jsheroes.io">2022</a>
    </div>
  </div>
</nav>

<div class="backdrop fixed w-full h-full top-0 right-0 bg-[rgba(0,0,0,0.6)] z-20 hidden"></div>

<script>
  document.addEventListener("astro:page-load", () => {
    const hamburgerBtn = document.querySelector(
      ".hamburger"
    ) as HTMLButtonElement;
    const closeBtn = document.querySelector(".close") as HTMLButtonElement;
    const backdrop = document.querySelector(".backdrop") as HTMLDivElement;
    const sideDrawer = document.querySelector(".side-drawer") as HTMLElement;
    const mainNav = document.querySelector(".main-nav") as HTMLElement;

    const sideDrawerLinks = document.querySelectorAll(
      ".side-drawer a"
    ) as NodeListOf<HTMLAnchorElement>;

    function onOpen() {
      backdrop.classList.add("!block");
      sideDrawer.classList.add("!translate-x-0");
      closeBtn.setAttribute("tabIndex", "0");
      sideDrawerLinks.forEach(link => link.setAttribute('tabIndex', "0"))
      mainNav.classList.add("hidden");
      closeBtn.focus();

      sideDrawerLinks[sideDrawerLinks.length - 1].addEventListener(
        "keydown",
        (e) => {
          if (e.key === "Tab" && !e.shiftKey) {
            e.preventDefault();
            closeBtn.focus();
          }
        }
      );
    }

    function onClose() {
      backdrop.classList.remove("!block");
      sideDrawer.classList.remove("!translate-x-0");
      mainNav.classList.remove("hidden");

      closeBtn.setAttribute("tabIndex", "-1");
      sideDrawerLinks.forEach((link) => {
        link.setAttribute('tabIndex', "-1");
      });
    }

    hamburgerBtn.addEventListener("click", onOpen);
    backdrop.addEventListener("click", onClose);
    closeBtn.addEventListener("click", onClose);

    sideDrawerLinks.forEach((link) => {
      link.addEventListener("click", onClose);
    });

    onClose();
  });
</script>
