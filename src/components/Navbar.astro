---
import { Icon } from "astro-icon/components";
export interface Props {
  theme?: "dark";
}

const { theme = "" } = Astro.props as Props;
const navlinkClass = `navlink ${theme}`;
---

<header class="relative m-auto max-w-[1280px]">
  <nav
    aria-label="Main navigation"
    class="main-nav absolute right-0 z-10 flex gap-4 p-4 font-display"
  >
    <div class="hidden gap-4 sm:flex">
      <a
        class={`${navlinkClass} h-0 w-0 overflow-hidden focus:h-auto focus:w-auto`}
        href="#main">Skip navigation</a
      >
      <a class={navlinkClass} href="/">Home</a>
      <a class={navlinkClass} href="/#speakers">Speakers</a>
      <a class={navlinkClass} href="/sponsor">Call for Sponsors</a>
    </div>

    <button
      class="hamburger w-[1.2rem] transition-transform duration-move ease-out hover:scale-[1.3] focus-visible:outline-accent-pink"
      aria-label="Toggle menu"
      aria-haspopup="true"
      aria-controls="sidebar-nav"
    >
      <Icon name="mdi:menu" class={`${navlinkClass} w-5 h-5`} />
    </button>
  </nav>
</header>

<nav
  class="side-drawer fixed right-0 top-0 z-30 flex h-full w-full max-w-[400px] translate-x-full flex-col overflow-y-scroll bg-primary font-display transition-all duration-slide ease-out"
  aria-hidden="true"
  aria-label="Sidebar navigation"
  id="sidebar-nav"
  tabindex="-1"
>
  <button
    class="close group self-end p-2 focus-visible:outline-accent-pink"
    aria-label="Close menu"
  >
    <Icon
      name="mdi:close"
      class="navlink w-[1.2rem] transition-transform duration-fade ease-out group-hover:scale-[1.3]"
    />
  </button>
  <div class="mt-12 flex w-full flex-col gap-8 pb-6">
    <div class="flex flex-col items-start gap-2 px-16">
      <a class="navlink" href="/">Home</a>
      <a class="navlink" href="/#speakers">Speakers</a>
      <!-- <a class="navlink" href="/#agenda">Agenda</a> -->
      <a class="navlink" href="/#sponsors">Sponsors</a>
    </div>

    <div class="flex flex-col items-start gap-2 px-16">
      <!-- <a class="navlink" href="/handbook">Handbook</a> -->
      <a class="navlink" href="/eco-friendly">Sustainability</a>
      <a class="navlink" href="/accessibility">Accesssibility</a>
      <a class="navlink" href="/transparency">Transparency</a>
    </div>

    <div class="flex flex-col items-start gap-2 px-16">
      <a class="navlink" href="/blog">Blog</a>
      <a class="navlink" href="/hall-of-fame">Hall of fame</a>
      <a class="navlink" href="/coc">Code of Conduct</a>
      <a class="navlink" href="/privacy">Privacy Statement</a>
      <a class="navlink" href="/terms-and-conditions">Terms and Conditions</a>

      <a class="navlink" href="/media">Media Kit</a>
      <a class="navlink" href="/meet-ecma">Meet Ecma</a>
    </div>

    <div class="flex flex-col items-start gap-2 px-16">
      <a
        class="navlink"
        target="_blank"
        rel="noreferrer noopener"
        href="https://2024.jsheroes.io">2024</a
      >
      <a
        class="navlink"
        target="_blank"
        rel="noreferrer noopener"
        href="https://2023.jsheroes.io">2023</a
      >
      <a
        class="navlink"
        target="_blank"
        rel="noreferrer noopener"
        href="https://2022.jsheroes.io">2022</a
      >
    </div>
  </div>
</nav>

<div
  class="backdrop fixed right-0 top-0 z-20 hidden h-full w-full bg-[rgba(0,0,0,0.6)]"
>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const hamburgerBtn = document.querySelector(
      ".hamburger"
    ) as HTMLButtonElement;
    const closeBtn = document.querySelector(".close") as HTMLButtonElement;
    const backdrop = document.querySelector(".backdrop") as HTMLDivElement;
    const sideDrawer = document.querySelector(".side-drawer") as HTMLElement;
    const mainNav = document.querySelector(".main-nav") as HTMLElement;

    const sideDrawerLinks = document.querySelectorAll(
      ".side-drawer a"
    ) as NodeListOf<HTMLAnchorElement>;

    function onOpen() {
      backdrop.classList.add("!block");
      sideDrawer.classList.add("!translate-x-0");
      closeBtn.setAttribute("tabIndex", "0");
      sideDrawerLinks.forEach((link) => link.setAttribute("tabIndex", "0"));
      mainNav.classList.add("hidden");
      closeBtn.focus();
      sideDrawer.setAttribute("aria-hidden", "false");

      sideDrawerLinks[sideDrawerLinks.length - 1].addEventListener(
        "keydown",
        (e) => {
          if (e.key === "Tab" && !e.shiftKey) {
            e.preventDefault();
            closeBtn.focus();
          }
        }
      );
    }

    function onClose() {
      backdrop.classList.remove("!block");
      sideDrawer.classList.remove("!translate-x-0");
      mainNav.classList.remove("hidden");

      sideDrawer.setAttribute("aria-hidden", "true");

      closeBtn.setAttribute("tabIndex", "-1");
      sideDrawerLinks.forEach((link) => {
        link.setAttribute("tabIndex", "-1");
      });
    }

    hamburgerBtn.addEventListener("click", onOpen);
    backdrop.addEventListener("click", onClose);
    closeBtn.addEventListener("click", onClose);

    sideDrawerLinks.forEach((link) => {
      link.addEventListener("click", onClose);
    });

    onClose();
  });
</script>
