---
const { default: arrowUp } = await import(
  "../../public/img/icons/arrow-up.svg?raw"
);
---

<button
  class="bg-transparent invisible fixed bottom-6 right-6 m-0 h-8 w-8 border-0 p-0 opacity-0 transition-all duration-fade ease-out hover:scale-125"
  aria-label="Scroll to top"
  id="scroll-top"
>
  <Fragment set:html={arrowUp} />
</button>

<script>
  document.addEventListener("astro:page-load", () => {
    const scrollToTopButton = document.querySelector(
      "#scroll-top",
    ) as HTMLButtonElement;

    function scrollToTop() {
      window.scrollTo({
        top: 0,
        behavior: "smooth",
      });
    }

    function renderScrollButton() {
      const shouldRender =
        window.scrollY > 900 && window.matchMedia("(min-width: 768px)").matches;

      if (shouldRender) {
        scrollToTopButton.classList.remove("invisible", "opacity-0");

        (scrollToTopButton.firstElementChild as SVGElement).style.cssText =
          "height: 2rem; width: 2rem;";

        const elementsFromPoint = document.elementsFromPoint(
          scrollToTopButton.offsetLeft,
          scrollToTopButton.offsetTop,
        ) as HTMLElement[];

        elementsFromPoint.forEach((element) => {
          if (element.tagName !== "SECTION" && element.tagName !== "FOOTER") {
            return;
          }

          if (element.dataset.variant === "light") {
            scrollToTopButton.classList.remove("white");
            scrollToTopButton.classList.add("dark");
          }

          if (
            element.tagName === "FOOTER" ||
            element.dataset.variant === "dark"
          ) {
            scrollToTopButton.classList.remove("dark");
            scrollToTopButton.classList.add("white");
          }
        });
      } else {
        scrollToTopButton.classList.add("invisible", "opacity-0");
      }
    }

    scrollToTopButton.addEventListener("click", scrollToTop);
    window.addEventListener("scroll", renderScrollButton);
  });
</script>

<style scoped>
  .white {
    fill: theme("colors.neutral-light");
  }

  .dark {
    fill: theme("colors.primary");
  }
</style>
