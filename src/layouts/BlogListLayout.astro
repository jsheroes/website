---
import { type Page, type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import Section from "../components/Section.astro";
import FormattedDate from "../components/FormattedDate.astro";

interface Props {
  title: string;
  description?: string;
  page: Page<CollectionEntry<"blog">[]>;
}

const posts = await getCollection("blog");
const tags = await getCollection("tags").then((tags) => {
  const tagsWithBlogs = tags.filter((tag) =>
    posts.some((post) =>
      post.data.tags.some((postTag) => postTag.slug === tag.slug),
    ),
  );
  return tagsWithBlogs;
});

function tagCount(slug: string) {
  return posts.filter((post) => post.data.tags.some((tag) => tag.slug === slug))
    .length;
}

const { page, title } = Astro.props;
const isBlogPage = Astro.url.pathname === "/blog";
const hasDefaultSlot = Astro.slots.has("default");
---

<BaseLayout title={`JSHeroes |  ${title}`}>
  <img
    class="block h-[500px] w-full object-cover"
    src={"/img/banners/default-with-bear.svg"}
    aria-hidden
  />

  <main id="main">
    <Section variant="light" content="text">
      <div>
        <h1 class="text-lg">{title}</h1>
      </div>

      <ul class="flex list-none flex-wrap gap-2 p-0 pb-4 *:mb-2">
        <li>
          <a
            class="rounded-2xl bg-accent-orange px-4 py-2 no-underline transition-all duration-fade ease-out hover:bg-accent-pink focus-visible:bg-accent-pink"
            href={`/blog`}
          >
            All posts ({posts.length})
          </a>
        </li>
        {
          tags.map(({ slug, data: { name } }) => (
            <li>
              <a
                class="rounded-2xl bg-accent-orange px-4 py-2 no-underline transition-all duration-fade ease-out hover:bg-accent-pink focus-visible:bg-accent-pink"
                href={`/tags/${slug}`}
              >
                {name} ({tagCount(slug)})
              </a>
            </li>
          ))
        }
      </ul>

      <ul class="m-0 list-none p-0">
        {
          page.data.map(
            ({
              slug,
              data: { published, title, summary },
            }: CollectionEntry<"blog">) => (
              <li class="border-t-[1px] border-neutral-separator py-5">
                <article class="flex flex-col">
                  <dl>
                    <dt class="sr-only">Published on</dt>
                    <dd>
                      <FormattedDate date={published} />
                    </dd>
                  </dl>
                  <div>
                    <h3>
                      <a href={`/blog/${slug}`}>{title}</a>
                    </h3>

                    <div class="mt-2">{summary}</div>
                  </div>
                </article>
              </li>
            ),
          )
        }
      </ul>
    </Section>
  </main>
</BaseLayout>
